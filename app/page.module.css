span.brand__accent {
  color: rgba(var(--sunset-orange-rgb), 1);
  font-size: calc(var(--base-font-size) * 2);
}

span.brand__secondary {
  color: rgba(var(--sandrift-rgb), 1);
  font-size: calc(var(--base-font-size) * 2);
}

.mainWrapper {
  width: 100%;
  height: 100vh;
  /* Start of snap to scroll. */
  overflow-y: scroll;
  scroll-snap-type: y mandatory;
}

.sectionWrapper {
  width: 100%;
  height: 100vh;
  display: flex;
  /* Vertical align flex row center. */
  align-items: center;
  /* Horizontal align flex row center. */
  justify-content: center;
  /* On scroll snaps to start of next section. */
  scroll-snap-align: start;
}

.sectionContent {
  max-width: 60rem;
}

.grid {
  display: grid;
  grid-template-columns: repeat(4, minmax(25%, auto));
  max-width: 100%;
  width: var(--max-width);
}

.card {
  padding: 1rem 1.2rem;
  border-radius: var(--border-radius);
  background: rgba(var(--card-rgb), 0);
  border: 1px solid rgba(var(--card-border-rgb), 0);
  transition:
    background 200ms,
    border 200ms;
}

.card span {
  display: inline-block;
  transition: transform 200ms;
}

.card h2 {
  font-weight: 600;
  margin-bottom: 0.7rem;
}

.card p {
  margin: 0;
  opacity: 0.6;
  font-size: 0.9rem;
  line-height: 1.5;
  max-width: 30ch;
  text-wrap: balance;
}

/* Enable hover only on non-touch devices */
@media (hover: hover) and (pointer: fine) {
  .card:hover {
    background: rgba(var(--card-rgb), 0.1);
    border: 1px solid rgba(var(--card-border-rgb), 0.15);
  }

  .card:hover span {
    transform: translateX(4px);
  }
}

@media (prefers-reduced-motion) {
  .card:hover span {
    transform: none;
  }
}

/* Mobile */
@media (max-width: 700px) {
  .grid {
    grid-template-columns: 1fr;
    margin-bottom: 120px;
    max-width: 320px;
    text-align: center;
  }

  .card {
    padding: 1rem 2.5rem;
  }

  .card h2 {
    margin-bottom: 0.5rem;
  }
}

/* Tablet and Smaller Desktop */
@media (min-width: 701px) and (max-width: 1120px) {
  .grid {
    grid-template-columns: repeat(2, 50%);
  }
}

@keyframes rotate {
  from {
    transform: rotate(360deg);
  }
  to {
    transform: rotate(0deg);
  }
}
